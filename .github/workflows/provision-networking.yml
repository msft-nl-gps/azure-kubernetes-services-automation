name: Provision Networking

on:
    workflow_call:
      inputs:
        logAnalyticsWorkspaceResourceId:
          description: 'Log Analytics Workspace Resource Id'
          required: true
          type: string
      outputs:
        vnet-id:
          description: 'Virtual Network Id'
          value: ${{ jobs.provision-networking.outputs.vnet-id }}
        subnet-id-aks:
          description: 'Subnet Id for AKS'
          value: ${{ jobs.provision-networking.outputs.subnet-id-aks }}
        subnet-id-sta:
          description: 'Subnet Id for STA'
          value: ${{ jobs.provision-networking.outputs.subnet-id-sta }}
        subnet-id-aag:
          description: 'Subnet Id for AAG'
          value: ${{ jobs.provision-networking.outputs.subnet-id-aag }}
        subnet-id-acr:
          description: 'Subnet Id for ACR'
          value: ${{ jobs.provision-networking.outputs.subnet-id-acr }}

jobs:
  provision-networking:
    environment: endor
    runs-on: [self-hosted, linux]
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Repo Self-Checkout
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1        
        with:         
            tenant-id: ${{ secrets.TENANT_ID }}
            client-id: ${{ secrets.CLIENT_ID }}
            subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
            enable-AzPSSession: true

      - uses: azure/arm-deploy@v1
        name: RG Networking
        id: resourceGroupNetworking
        with:
          scope: subscription
          region: ${{ vars.AZURE_REGION }}
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          deploymentName: rg-monitoring
          template: arm/templates/resource-group.json
          parameters: >
            arm/parameters/resource-group.networking.json
            resourceGroupLocation=${{ vars.AZURE_REGION }}

      - uses: azure/arm-deploy@v1
        name: NSG AAG
        id: nsgAAG
        with:
          template: arm/templates/network-security-group.json
          parameters: >
            arm/parameters/network-security-group.aag.json
          resourceGroupName: ${{ steps.resourceGroupNetworking.outputs.resourceGroupName }}

      - uses: azure/arm-deploy@v1
        name: NSG AKS
        id: nsgAKS
        with:
          template: arm/templates/network-security-group.json
          parameters: >
            arm/parameters/network-security-group.aks.json
          resourceGroupName: ${{ steps.resourceGroupNetworking.outputs.resourceGroupName }}
      
      - uses: azure/arm-deploy@v1
        name: NSG STA
        id: nsgSTA
        with:
          template: arm/templates/network-security-group.json
          parameters: >
            arm/parameters/network-security-group.sta.json
          resourceGroupName: ${{ steps.resourceGroupNetworking.outputs.resourceGroupName }}
      
      - uses: azure/arm-deploy@v1
        name: NSG STA
        id: nsgACR
        with:
          template: arm/templates/network-security-group.json
          parameters: >
            arm/parameters/network-security-group.acr.json
          resourceGroupName: ${{ steps.resourceGroupNetworking.outputs.resourceGroupName }}
      
      - uses: azure/arm-deploy@v1
        name: VNET
        id: VNET
        with:
          template: arm/templates/virtual-network.json
          parameters: >
            arm/parameters/virtual-network.json
            nsg-id-acr=${{ steps.nsgACR.outputs.nsg-id }}
            nsg-id-aag=${{ steps.nsgAAG.outputs.nsg-id }}
            nsg-id-aks=${{ steps.nsgAKS.outputs.nsg-id }}
            nsg-id-sta=${{ steps.nsgSTA.outputs.nsg-id }}
          resourceGroupName: ${{ steps.resourceGroupNetworking.outputs.resourceGroupName }}
    outputs:
      vnet-id: ${{ steps.VNET.outputs.vnet-id }}
      subnet-id-aks: ${{ steps.VNET.outputs.subnet-id-aks }}
      subnet-id-sta: ${{ steps.VNET.outputs.subnet-id-sta }}
      subnet-id-aag: ${{ steps.VNET.outputs.subnet-id-aag }}
      subnet-id-acr: ${{ steps.VNET.outputs.subnet-id-acr }}
